name: TOC Generator via push

on:
  push:
    tags-ignore:
      - '**'
  pull_request:

permissions:
  contents: write

jobs:
  validate-branch:
    runs-on: ubuntu-22.04
    steps:
      - name: Check if ref is not default branch
        run: |
          target_branch="${{ github.ref }}"
          default_branch="${{ github.event.repository.default_branch }}"
          
          if [[ "$target_branch" != "refs/heads/$default_branch" ]]; then
            echo "::notice::This is not the default branch. ($default_branch)"
            echo "Target branch: $target_branch"
            echo "Default branch: $default_branch"
            echo "passed=1" >> "$GITHUB_OUTPUT"
          else
            echo "::notice::Branch check passed."
          fi

  validate-commit-message:
    runs-on: ubuntu-22.04
    steps:
      - name: Verify commit message contains...
        run: |
          commit_message="${{ github.event.head_commit.message }}"
          
          if [[ "$commit_message" != *"Update package.json"* ]]; then
            echo "::notice::Commit message does not match: Update package.json"
            echo "passed=1" >> $GITHUB_OUTPUT
          else
            echo "::notice::Commit message matches: Update package.json"
          fi

  toc-generator:
    needs: [validate-branch, validate-commit-message]
    uses: IShix-g/Unity-GitHubActions/.github/workflows/reusable-toc-generator.yaml@main
    if: ${{ needs.validate-branch.outputs.passed == '1' && needs.validate-commit-message.outputs.passed == '1' }}
    secrets:
      BOT_APP_ID: ${{ secrets.BOT_APP_ID }}
      BOT_PRIVATE_KEY: ${{ secrets.BOT_PRIVATE_KEY }}
    with:
      target-paths: 'README*.md,Docs/README*.md'