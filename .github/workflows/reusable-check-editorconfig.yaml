name: "(Reusable) Check .editorconfig"

on:
  workflow_call:
    inputs:
      ref:
        description: "Specify a branch or commit ID"
        required: true
        type: string
      max-retries:
        description: "Maximum number of retries if API call fails"
        required: false
        type: string
        default: "3"
      retry-delay:
        description: "Delay in seconds between retries"
        required: false
        type: string
        default: "5"
      fail-on-missing:
        description: "Fail the workflow if .editorconfig does not exist"
        required: false
        type: boolean
        default: true
    outputs:
      exists:
        description: "Indicates whether the .editorconfig file exists"
        value: ${{ steps.check-editorconfig.outputs.exists }}

jobs:
  check-editorconfig:
    runs-on: ubuntu-22.04
    steps:
      - name: Check for .editorconfig
        id: check-editorconfig
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          file_path=".editorconfig"
          ref="${{ inputs.ref }}"
          max_retries="${{ inputs.max-retries }}"
          retry_delay_sec="${{ inputs.retry-delay }}"
          fail_on_missing="${{ inputs.fail-on-missing }}"
  
          echo "Checking .editorconfig in ref: $ref"
  
          success=false
  
          for ((i=1; i<=max_retries; i++)); do
            response=$(gh api "repos/${{ github.repository }}/contents/$file_path?ref=$ref" \
              --header "Authorization: Bearer $GH_TOKEN" \
              --timeout 10s \
              --jq ". | select(.type==\"file\") | select(.name==\"$file_path\")")
  
            api_exit_code=$?
  
            if [ $api_exit_code -eq 124 ]; then
              echo "::warning::Attempt $i: API request timed out. Retrying in $retry_delay_sec seconds..."
              sleep $retry_delay_sec
              continue
            elif [ -z "$response" ]; then
              if [ $i -eq $max_retries ]; then
                if [ "$fail_on_missing" = "true" ]; then
                  echo "::error::Failed to find .editorconfig after $max_retries retries in ref '$ref'."
                else
                  echo "::warning::Failed to find .editorconfig after $max_retries retries in ref '$ref'. Not failing workflow."
                fi
              else
                echo "::warning::Attempt $i: .editorconfig file not found. Retrying in $retry_delay_sec seconds..."
                sleep $retry_delay_sec
              fi
            else
              echo "::notice::Success: .editorconfig file exists in ref '$ref'."
              success=true
              break
            fi
          done
  
          echo "exists=$success" | tee -a "$GITHUB_OUTPUT"
  
          if [ "$success" = "false" ] && [ "$fail_on_missing" = "true" ]; then
            exit 1
          fi