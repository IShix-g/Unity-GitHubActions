name: (Reusable) Build Package

on:
  workflow_call:
    inputs:
      tag:
        description: 'Git tag you want to create (e.g., 1.0.0).'
        required: true
        type: string
      package-name:
        description: 'Specify the Unity package name without an extension.'
        required: true
        type: string
      commit-id:
        description: 'Commit ID for release and tag.'
        required: false
        type: string
        default: ''
      unity-version:
        description: 'Version of Unity to use for testing the project. Use "auto" to get from your ProjectSettings/ProjectVersion.txt. ⚠️ If testing a Unity Package, this field is required and cannot be set to "auto". https://game.ci/docs/docker/versions/'
        required: false
        type: string
        default: 'auto'
      project-path:
        description: 'Specify the path to your Unity project or package to be tested. The path should be relative to the root of your project.'
        required: false
        type: string
        default: ''
      builds-path:
        description: 'Path where the builds should be stored.'
        required: false
        type: string
        default: 'build'
      build-method:
        description: 'Path where the builds should be stored.'
        required: false
        type: string
        default: 'PackageExporter.Editor.CLIBuilder.Build'
      custom-parameters:
        description: 'Custom parameters to configure the build. https://game.ci/docs/github/builder#customparameters'
        required: false
        type: string
        default: ''
      retention-days:
        description: >
          Duration after which artifact will expire in days. 0 means using default retention.
          Minimum 1 day.
          Maximum 90 days unless changed from the repository settings page.
        required: false
        type: string
        default: '1'
    secrets:
      UNITY_EMAIL:
        required: true
      UNITY_PASSWORD:
        required: true
      UNITY_LICENSE:
        required: false
      UNITY_SERIAL:
        required: false
    outputs:
      package-name:
        description: 'Unity package name'
        value: ${{ jobs.build-package.outputs.package-name }}
      export-path:
        description: 'Export path where the package was generated'
        value: ${{ jobs.build-package.outputs.export-path }}
      artifact-url:
        description: 'URL to download an Artifact.'
        value: ${{ jobs.build-package.outputs.artifact-url }}

env:
  TARGET_PLATFORM: StandaloneLinux64

jobs:
  print-unity-version:
    runs-on: ubuntu-22.04
    steps:
      - name: Print
        run: |
          unity_version=${{ inputs.unity-version }}
          echo "::notice title=Unity Version::$unity_version"

  build-package:
    runs-on: ubuntu-22.04
    timeout-minutes: 15
    outputs:
      package-name: ${{ steps.path-normalizer.outputs.normalized-package-name }}
      export-path: ${{ steps.path-normalizer.outputs.export-path }}
      artifact-url: ${{ steps.upload-artifact.outputs.artifact-url }}
    steps:
      - name: Normalize Path
        id: path-normalizer
        shell: bash
        run: |
          project_path="${{ inputs.project-path }}"
          builds_path="${{ inputs.builds-path }}"
          platform="${{ env.TARGET_PLATFORM }}"
          package_name="${{ inputs.package-name }}_${{ inputs.tag }}.unitypackage"

          export_path="$project_path/$builds_path/$platform/$package_name"
          export_path=$(echo "$export_path" | sed -e 's://*:/:g' -e 's:^/::')

          echo "normalized-package-name=$package_name" >> "$GITHUB_OUTPUT"
          echo "export-path=$export_path" >> "$GITHUB_OUTPUT"
          echo "::notice title=Export Path::$export_path"

      - name: Set Unity License Name
        id: license
        run: |
          if [ -n "${{ secrets.UNITY_LICENSE }}" ]; then
            license_name="UNITY_LICENSE"
          elif [ -n "${{ secrets.UNITY_SERIAL }}" ]; then
            license_name="UNITY_SERIAL"
          else
            echo "::error::No secrets.UNITY_LICENSE or secrets.UNITY_SERIAL found."
            exit 1
          fi

          echo "name=$license_name" >> "$GITHUB_OUTPUT"
          echo "::notice title=License::$license_name"

      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.commit-id }}
          fetch-depth: 0
          lfs: true

      - uses: actions/cache@v4
        with:
          path: Library
          key: Library-${{ env.TARGET_PLATFORM }}
          restore-keys: Library-

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
          ${{ steps.license.outputs.name }}: ${{ secrets[steps.license.outputs.name] }}
        with:
          targetPlatform: ${{ env.TARGET_PLATFORM }}
          unityVersion: ${{ inputs.unity-version }}
          projectPath: ${{ inputs.project-path }}
          buildsPath: ${{ inputs.builds-path }}
          buildName: ${{ steps.path-normalizer.outputs.normalized-package-name }}
          buildMethod: ${{ inputs.build-method }}
          customParameters: ${{ inputs.custom-parameters }}

      - uses: ./.github/actions/check-metas
        with:
          directory: ${{ inputs.project-path }}

      - uses: actions/upload-artifact@v4
        id: upload-artifact
        with:
          name: ${{ steps.path-normalizer.outputs.normalized-package-name }}
          path: ${{ steps.path-normalizer.outputs.export-path }}
          retention-days: ${{ inputs.retention-days }}