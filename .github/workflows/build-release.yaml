name: Build Release

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Git tag you want to create (e.g., 1.0.0).'
        required: true
        type: string
      clean-branch:
        description: 'Delete the branch? All branches except the default branch will be deleted.'
        default: false
        type: boolean
      dry-run:
        description: 'Dry Run: Set to true to simulate the merge without committing or pushing changes.'
        default: false
        type: boolean
      fast-forward:
        description: 'Allow fast-forward merge'
        type: boolean
        required: false
        default: false

jobs:
  update-packagejson:
    uses: ./.github/workflows/reusable-update-packagejson.yaml
    secrets:
      BOT_APP_ID: ${{ secrets.BOT_APP_ID }}
      BOT_PRIVATE_KEY: ${{ secrets.BOT_PRIVATE_KEY }}
    with:
      ref: ${{ github.ref }}
      file-path: ./Packages/SimplePackage/package.json
      tag: ${{ inputs.tag }}
      dry-run: ${{ inputs.dry-run }}

  merge-and-push:
    needs: [update-packagejson]
    if: ${{ needs.update-packagejson.outputs.changed == '1' }}
    uses: ./.github/workflows/reusable-merge-and-push.yaml
    secrets:
      BOT_APP_ID: ${{ secrets.BOT_APP_ID }}
      BOT_PRIVATE_KEY: ${{ secrets.BOT_PRIVATE_KEY }}
    with:
      target-branch: ${{ github.ref }}
      push-branch: ${{ github.event.repository.default_branch }}
      commit-id: ${{ needs.update-packagejson.outputs.sha }}
      dry-run: ${{ inputs.dry-run }}
      fast-forward: ${{ inputs.fast-forward }}

  validate-outputs:
    needs: [update-packagejson, merge-and-push]
    if: ${{ needs.update-packagejson.outputs.changed != '1' || needs.merge-and-push.outputs.merged != '1' }}
    runs-on: ubuntu-22.04
    steps:
      - name: Validate Outputs
        run: |
          target_branch="${{ needs.create-branches.outputs.target-branch }}"
          push_branch="${{ needs.create-branches.outputs.push-branch }}"
          
          echo "::error::Conditions not met. Exiting..."
          echo "Target branch: $target_branch"
          echo "Push branch: $push_branch"
          exit 1

  release-notes:
    needs: [update-packagejson, merge-and-push, validate-outputs]
    uses: ./.github/workflows/reusable-release-notes.yaml
    with:
      commit-id: ${{ needs.update-packagejson.outputs.sha }}

  create-release:
    needs: [update-packagejson, merge-and-push, validate-outputs, release-notes]
    uses: ./.github/workflows/reusable-create-release.yaml
    secrets:
      BOT_APP_ID: ${{ secrets.BOT_APP_ID }}
      BOT_PRIVATE_KEY: ${{ secrets.BOT_PRIVATE_KEY }}
    with:
      commit-id: ${{ needs.merge-and-push.outputs.sha }}
      dry-run: ${{ inputs.dry-run }}
      tag: ${{ inputs.tag }}
      release-note: ${{ needs.release-notes.outputs.notes }}

  clean-branch:
    needs: [update-packagejson, merge-and-push, validate-outputs, release-notes, create-release]
    if: ${{ inputs.clean-branch }}
    uses: ./.github/workflows/reusable-clean-branch.yaml
    secrets:
      BOT_APP_ID: ${{ secrets.BOT_APP_ID }}
      BOT_PRIVATE_KEY: ${{ secrets.BOT_PRIVATE_KEY }}
    with:
      branch: ${{ github.ref }}